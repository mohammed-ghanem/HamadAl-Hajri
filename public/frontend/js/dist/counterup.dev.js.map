{"version":3,"sources":["counterup.js"],"names":["$","fn","counterUp","options","settings","extend","each","$this","$settings","counterUpper","nums","divisions","time","delay","num","text","isComma","test","replace","isInt","isFloat","decimalPlaces","split","length","i","newNum","parseInt","parseFloat","toFixed","toString","unshift","data","f","shift","setTimeout","waypoint","offset","triggerOnce","jQuery"],"mappings":";;AACA,CAAC,UAAUA,CAAV,EAAa;AACV;;AAEAA,EAAAA,CAAC,CAACC,EAAF,CAAKC,SAAL,GAAiB,UAAUC,OAAV,EAAoB;AAEnC;AACA,QAAIC,QAAQ,GAAGJ,CAAC,CAACK,MAAF,CAAS;AACpB,cAAQ,GADY;AAEpB,eAAS;AAFW,KAAT,EAGZF,OAHY,CAAf;AAKA,WAAO,KAAKG,IAAL,CAAU,YAAU;AAEvB;AACA,UAAIC,KAAK,GAAGP,CAAC,CAAC,IAAD,CAAb;AACA,UAAIQ,SAAS,GAAGJ,QAAhB;;AAEA,UAAIK,YAAY,GAAG,SAAfA,YAAe,GAAW;AAC1B,YAAIC,IAAI,GAAG,EAAX;AACA,YAAIC,SAAS,GAAGH,SAAS,CAACI,IAAV,GAAiBJ,SAAS,CAACK,KAA3C;AACA,YAAIC,GAAG,GAAGP,KAAK,CAACQ,IAAN,EAAV;AACA,YAAIC,OAAO,GAAG,gBAAgBC,IAAhB,CAAqBH,GAArB,CAAd;AACAA,QAAAA,GAAG,GAAGA,GAAG,CAACI,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAN;AACA,YAAIC,KAAK,GAAG,WAAWF,IAAX,CAAgBH,GAAhB,CAAZ;AACA,YAAIM,OAAO,GAAG,mBAAmBH,IAAnB,CAAwBH,GAAxB,CAAd;AACA,YAAIO,aAAa,GAAGD,OAAO,GAAG,CAACN,GAAG,CAACQ,KAAJ,CAAU,GAAV,EAAe,CAAf,KAAqB,EAAtB,EAA0BC,MAA7B,GAAsC,CAAjE,CAR0B,CAU1B;;AACA,aAAK,IAAIC,CAAC,GAAGb,SAAb,EAAwBa,CAAC,IAAI,CAA7B,EAAgCA,CAAC,EAAjC,EAAqC;AAEjC;AACA,cAAIC,MAAM,GAAGC,QAAQ,CAACZ,GAAG,GAAGH,SAAN,GAAkBa,CAAnB,CAArB,CAHiC,CAKjC;;AACA,cAAIJ,OAAJ,EAAa;AACTK,YAAAA,MAAM,GAAGE,UAAU,CAACb,GAAG,GAAGH,SAAN,GAAkBa,CAAnB,CAAV,CAAgCI,OAAhC,CAAwCP,aAAxC,CAAT;AACH,WARgC,CAUjC;;;AACA,cAAIL,OAAJ,EAAa;AACT,mBAAO,eAAeC,IAAf,CAAoBQ,MAAM,CAACI,QAAP,EAApB,CAAP,EAA+C;AAC3CJ,cAAAA,MAAM,GAAGA,MAAM,CAACI,QAAP,GAAkBX,OAAlB,CAA0B,cAA1B,EAA0C,OAAK,GAAL,GAAS,IAAnD,CAAT;AACH;AACJ;;AAEDR,UAAAA,IAAI,CAACoB,OAAL,CAAaL,MAAb;AACH;;AAEDlB,QAAAA,KAAK,CAACwB,IAAN,CAAW,gBAAX,EAA6BrB,IAA7B;AACAH,QAAAA,KAAK,CAACQ,IAAN,CAAW,GAAX,EAhC0B,CAkC1B;;AACA,YAAIiB,CAAC,GAAG,SAAJA,CAAI,GAAW;AACfzB,UAAAA,KAAK,CAACQ,IAAN,CAAWR,KAAK,CAACwB,IAAN,CAAW,gBAAX,EAA6BE,KAA7B,EAAX;;AACA,cAAI1B,KAAK,CAACwB,IAAN,CAAW,gBAAX,EAA6BR,MAAjC,EAAyC;AACrCW,YAAAA,UAAU,CAAC3B,KAAK,CAACwB,IAAN,CAAW,gBAAX,CAAD,EAA+BvB,SAAS,CAACK,KAAzC,CAAV;AACH,WAFD,MAEO;AACH,mBAAON,KAAK,CAACwB,IAAN,CAAW,gBAAX,CAAP;AACAxB,YAAAA,KAAK,CAACwB,IAAN,CAAW,gBAAX,EAA6B,IAA7B;AACAxB,YAAAA,KAAK,CAACwB,IAAN,CAAW,gBAAX,EAA6B,IAA7B;AACH;AACJ,SATD;;AAUAxB,QAAAA,KAAK,CAACwB,IAAN,CAAW,gBAAX,EAA6BC,CAA7B,EA7C0B,CA+C1B;;AACAE,QAAAA,UAAU,CAAC3B,KAAK,CAACwB,IAAN,CAAW,gBAAX,CAAD,EAA+BvB,SAAS,CAACK,KAAzC,CAAV;AACH,OAjDD,CANuB,CAyDvB;;;AACAN,MAAAA,KAAK,CAAC4B,QAAN,CAAe1B,YAAf,EAA6B;AAAE2B,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,WAAW,EAAE;AAA/B,OAA7B;AACH,KA3DM,CAAP;AA6DD,GArED;AAuED,CA1EH,EA0EMC,MA1EN","sourcesContent":["\r\n(function( $ ){\r\n    \"use strict\";\r\n  \r\n    $.fn.counterUp = function( options ) {\r\n  \r\n      // Defaults\r\n      var settings = $.extend({\r\n          'time': 400,\r\n          'delay': 10\r\n      }, options);\r\n  \r\n      return this.each(function(){\r\n  \r\n          // Store the object\r\n          var $this = $(this);\r\n          var $settings = settings;\r\n  \r\n          var counterUpper = function() {\r\n              var nums = [];\r\n              var divisions = $settings.time / $settings.delay;\r\n              var num = $this.text();\r\n              var isComma = /[0-9]+,[0-9]+/.test(num);\r\n              num = num.replace(/,/g, '');\r\n              var isInt = /^[0-9]+$/.test(num);\r\n              var isFloat = /^[0-9]+\\.[0-9]+$/.test(num);\r\n              var decimalPlaces = isFloat ? (num.split('.')[1] || []).length : 0;\r\n  \r\n              // Generate list of incremental numbers to display\r\n              for (var i = divisions; i >= 1; i--) {\r\n  \r\n                  // Preserve as int if input was int\r\n                  var newNum = parseInt(num / divisions * i);\r\n  \r\n                  // Preserve float if input was float\r\n                  if (isFloat) {\r\n                      newNum = parseFloat(num / divisions * i).toFixed(decimalPlaces);\r\n                  }\r\n  \r\n                  // Preserve commas if input had commas\r\n                  if (isComma) {\r\n                      while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\r\n                          newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, '$1'+','+'$2');\r\n                      }\r\n                  }\r\n  \r\n                  nums.unshift(newNum);\r\n              }\r\n  \r\n              $this.data('counterup-nums', nums);\r\n              $this.text('0');\r\n  \r\n              // Updates the number until we're done\r\n              var f = function() {\r\n                  $this.text($this.data('counterup-nums').shift());\r\n                  if ($this.data('counterup-nums').length) {\r\n                      setTimeout($this.data('counterup-func'), $settings.delay);\r\n                  } else {\r\n                      delete $this.data('counterup-nums');\r\n                      $this.data('counterup-nums', null);\r\n                      $this.data('counterup-func', null);\r\n                  }\r\n              };\r\n              $this.data('counterup-func', f);\r\n  \r\n              // Start the count up\r\n              setTimeout($this.data('counterup-func'), $settings.delay);\r\n          };\r\n  \r\n          // Perform counts when the element gets into view\r\n          $this.waypoint(counterUpper, { offset: '100%', triggerOnce: true });\r\n      });\r\n  \r\n    };\r\n  \r\n  })( jQuery );"],"file":"counterup.dev.js"}